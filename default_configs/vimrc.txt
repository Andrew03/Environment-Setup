" ================
" Compatibility  
" ================
	set nocompatible																		" makes sure conflicts won't happen from using vi features

" ================
" User Interface 
" ================
	set number																					" shows line numbers
	syntax enable																				" enables syntax processing
	set showcmd																					" shows last entered command in bottom bar
	set cursorline																			" highlights current line
  filetype indent plugin on														" load file type-specific indent files and plugins
  au FileType python setl sw=4 sts=4 et               " set python tabs to four spaces
	set wildmenu																				" visual auto complete for command menu
	set lazyredraw																			" redraw only when we need to
	set showmatch																				" highlight matching [{()}]
	set ruler																						" shows row and column ruler info
	set spell spelllang=en_us														" enables spell check
	set nowrap																					" disables visual line wrapping
	set textwidth=0 wrapmargin=0												" disables physical line wrapping (automatic insertion of newlines)
	set nolist																					" prevents vim from showing hidden characters
	set laststatus=2																		" always displays the status line, even if there is just one window
	set visualbell																			" makes screen flash instead of setting an annoying audio alarm
	set t_vb=n																					" needed when setting visualbell otherwise vim won't flash or beep
	set cmdheight=2																			" Set the command window height to 2 lines
  set guifont=Hack                                    " This is really set in terminal settings

" ================
"    Searching   
" ================
	set incsearch																				" search as characters are entered
	set hlsearch																				" highlight matches
	set ignorecase																			" ignore case while searching
	set smartcase																				" ignore case if is all lowercase, case-sensitive otherwise

" ================
"      Tabs      
" ================
	set expandtab																			  " makes tabs look like spaces 
  set smarttab                                        " makes the tabbing look nice automatically
	set autoindent																			" automatically indents after hitting enter
	set smartindent																			" enables smart indent
	set tabstop=2																				" number of visual spaces per tab
	set softtabstop=2																		" number of spaces per tab key
	set shiftwidth=2																		" number of spaces per indent

" ================
"     Folding    
" ================
	set foldenable																			" enable folding
	set foldlevelstart=10																" open most folds by default
	set foldnestmax=10																	" 10 nested fold max
	set foldmethod=indent																" fold based on indent level
	nnoremap <space> za                                 " space open/closes folds

" ================
"    Backspace   
" ================
	set backspace=indent,eol,start											" allows backspace to go up lines

" ================
"    Splitting   
" ================
	set splitright																			" sets vertical splits to open right of current window
	set splitbelow																			" sets horizontal splits to open  below current window
  nnoremap <leader>\| :vsplit<CR>                     " opens a vertical split using leader +  |
  nnoremap <leader>-  :split<CR>                      " opens a horizontal split using leader + -
  nnoremap <leader>h  <C-W><C-H>                      " switch to left window using leader + h
  nnoremap <leader>j  <C-W><C-J>                      " switch to bottom window using leader + j
  nnoremap <leader>k  <C-W><C-K>                      " switch to top window using leader + k
  nnoremap <leader>l  <C-W><C-L>                      " switch to left window using leader + l

" ================
"      Mouse     
" ================
	set mouse=a																					" enables mouse usage in all modes

" ================
"   Scrolling    
" ================
	" Start scrolling when we're getting close to margins
	set scrolloff=10
	set sidescrolloff=15
	set sidescroll=1

" ================
"     Backup     
" ================
	set nobackup																				" disables backup files
	set noswapfile																			" disables swap files

" ================
"    Pasting     
" ================
	nnoremap <F2> :set invpaste paste?<CR>              " toggles auto indentation and other features for pasting in read mode
	set pastetoggle=<F2>																" toggles auto indentation and other features for pasting in insert mode
	set showmode																				" shows if pasting features have been enabled or not

" ================
"  Key Mapping   
" ================
	let mapleader="\\"																	" sets <leader> as \ key, default setting
	" Normal Mode
	" ================

	" Insert Mode
	" ================

	" Visual Mode
	" ================
		vnoremap <leader>" <ESC>`<i"<ESC>`>a"<ESC>        " enclose highlighted text in quotes using leader + "
		vnoremap <leader>{ <ESC>`<i{<ESC>`>a}<ESC>        " enclose highlighted text in brackets using leader + {
		vnoremap <leader>( <ESC>`<i(<ESC>`>a)<ESC>        " enclose highlighted text in parenthesis using leader + (
		"vnoremap <leader>/* <ESC>`<O/*<ESC>`>o*/<ESC>     " comment out highlighted text using leader + /*

  " File Specific
	" ================
    autocmd FileType python nnoremap <leader>c I# <ESC>
    autocmd FileType python vnoremap <leader>c <ESC>`<O'''<ESC>`>o'''<ESC>
    autocmd FileType cpp    nnoremap <leader>c I//<ESC>
    autocmd FileType cpp    nnoremap <leader>c I//<ESC>
    autocmd FileType cpp    vnoremap <leader>c <ESC>`<O/*<ESC>`>o*/<ESC>
    autocmd FileType c      nnoremap <leader>c I//<ESC>
    autocmd FileType c      vnoremap <leader>c <ESC>`<O/*<ESC>`>o*/<ESC>
    autocmd FileType java   nnoremap <leader>c I//<ESC>
    autocmd FileType java   vnoremap <leader>c <ESC>`<O/*<ESC>`>o*/<ESC>

" ================
"    Edit Vim    
" ================
	nnoremap <leader>ev :vsplit $MYVIMRC<CR>						" opens up vimrc in a split file for fast editing
	nnoremap <leader>sv :source $MYVIMRC<CR>						" sources vimrc, applies change
